# Number Finder

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Number Finder

Create a `NumberFinder` module which can find the `smallest/1` number in a list, and the `largest/1` number in a list.

<!-- livebook:{"force_markdown":true} -->

```elixir
NumberFinder.smallest([2, 3, 1])
1

NumberFinder.largest([2, 3, 1])
3
```

```elixir
defmodule NumberFinder do
  @doc """
  Find the smallest number in a list

  ## Examples

    iex> NumberFinder.smallest([2, 3, 1])
    1
    iex> NumberFinder.smallest([2, 2, 3, 4])
    2
    iex> NumberFinder.smallest([2, 2, 3, 4, 10, 20, -3])
    -3
  """
  def smallest(number_list) do
  end

  @doc """
  Find the largest number in a list

  ## Examples

    iex> NumberFinder.largest([2, 3, 1])
    3
    iex> NumberFinder.largest([2, 2, 3, 4, 4])
    4
    iex> NumberFinder.largest([2, 2, 3, 4, 10, 20, -3])
    20
  """
  def largest(number_list) do
  end
end
```

## Up Next

| Previous                           | Next                                                   |
| ---------------------------------- | -----------------------------------------------------: |
| [Reduce](../reading/reduce.livemd) | [Weighted Voting](../exercises/weighted_voting.livemd) |
