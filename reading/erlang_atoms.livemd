# Erlang Atoms

```elixir
Mix.install([
  {:kino, github: "livebook-dev/kino", override: true},
  {:kino_lab, "~> 0.1.0-dev", github: "jonatanklosko/kino_lab"},
  {:vega_lite, "~> 0.1.4"},
  {:kino_vega_lite, "~> 0.1.1"},
  {:benchee, "~> 0.1"},
  {:ecto, "~> 3.7"},
  {:math, "~> 0.7.0"},
  {:faker, "~> 0.17.0"},
  {:utils, path: "#{__DIR__}/../utils"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

### Erlang

Atoms in Elixir are also used to provide access to Erlang tools.
If you're not already familiar, Erlang is the low level language that Elixir is built on.
It contains a collection of useful tools

For example, there is the `:math` module, which has math related functionality.

Here's how you can get pi from the :math module.

```elixir
:math.pi()
```

You will learn more about how to use Erlang through atoms in future lessons. It's enough for
now to be aware that Erlang tools can be accessed through certain atoms.

### Your Turn

In the Elixir cell below, create an atom of your favorite element. Mine is `:hydrogen`
because it likes to get along with everyone.

You can find the full list of elements [here](https://ptable.com/?lang=en#Properties).

```elixir

```
## Commit Your Progress

Run the following in your command line from the project folder to track and save your progress in a Git commit.

```
$ git add .
$ git commit -m "finish erlang atoms section"
```
