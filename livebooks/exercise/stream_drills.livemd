# Stream Drills

```elixir
Mix.install([
  {:jason, "~> 1.4"},
  {:kino, "~> 0.9", override: true},
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">Home</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=Stream Drills">Report An Issue</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../reading/file.livemd">File</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../exercises/file_drills.livemd">File Drills</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>

## Stream Drills

Drills help you develop familiarity and muscle memory with syntax through repeated exercises. Unlike usual problems, Drills are not intended to develop problem solving skills, they are purely for developing comfort and speed.

This set of drills is for [Streams](../reading/streams.livemd). Follow the instructions for each drill and complete them as quickly as you can.

## Stream.map/2

Use [Stream.map/2](https://hexdocs.pm/elixir/Stream.html#map/2) to double elements in a range from `1..10`, then use [Enum.to_list/1](https://hexdocs.pm/elixir/Enum.html#to_list/1) to convert the resulting stream into a list `[2, 4, 6, 8, 10, 12, 14, 16, 18, 20]`

```elixir

```

Use [Stream.map/2](https://hexdocs.pm/elixir/Stream.html#map/2) and [Enum.to_list/1](https://hexdocs.pm/elixir/Enum.html#to_list/1) to sum a list of tuple pairs `[{1, 1}, {2, 2}, {3, 3}]` into `[2, 4, 6]`.

```elixir

```

## Stream.filter/2

Use [Stream.filter/2](https://hexdocs.pm/elixir/Stream.html#filter/2) and [Enum.to_list/1](https://hexdocs.pm/elixir/Enum.html#to_list/1) to filter even numbers from a range `1..10` to return `[2, 4, 6, 8, 10]`.

```elixir

```

Use [Stream.filter/2](https://hexdocs.pm/elixir/Stream.html#filter/2) and [Enum.to_list/1](https://hexdocs.pm/elixir/Enum.html#to_list/1) to filter numbers greater than `5` from a range `1..10` to return `[6, 7, 8, 9, 10]`.

```elixir

```

## Stream.cycle/1

Use [Stream.cycle/1](https://hexdocs.pm/elixir/Stream.html#cycle/1) with [Enum.take/2](https://hexdocs.pm/elixir/Enum.html#take/2) to generate the list `[1, 2, 3, 1, 2, 3, 1, 2, 3]`.

```elixir

```

Use [Stream.cycle/1](https://hexdocs.pm/elixir/Stream.html#cycle/1) with [Enum.take/2](https://hexdocs.pm/elixir/Enum.html#take/2) to generate the list `["a", "b", "a", "b"]`

```elixir

```

## Stream.iterate/2

Use [Stream.iterate/2](https://hexdocs.pm/elixir/Stream.html#iterate/2) and [Enum.take/2](https://hexdocs.pm/elixir/Enum.html#take/2) to generate a list of numbers from `1` to `10`.

```elixir

```

Use [Stream.iterate/2](https://hexdocs.pm/elixir/Stream.html#iterate/2) and [Enum.take/2](https://hexdocs.pm/elixir/Enum.html#take/2) to generate a list of negative numbers from `0` to `-10`.

```elixir

```

Use [Stream.iterate/2](https://hexdocs.pm/elixir/Stream.html#iterate/2) and [Enum.take/2](https://hexdocs.pm/elixir/Enum.html#take/2) to generate a list of `2` to increasing powers by multiplying the accumulator by two. i.e. $2^1$, $2^2$, $2^3$, $2^4$.

```elixir

```

## Stream.unfold/2

Use [Stream.unfold/2](https://hexdocs.pm/elixir/Stream.html#unfold/2) and [Enum.take/2](https://hexdocs.pm/elixir/Enum.html#take/2) to generate a list of `10` cubed numbers. i.e. $1^3, 2^3, 3^3$

```elixir

```

Use [Stream.unfold/2](https://hexdocs.pm/elixir/Stream.html#unfold/2) and [Enum.take/2](https://hexdocs.pm/elixir/Enum.html#take/2) to generate a list of `5` integers as strings. `["1", "2", "3", "4", "5"]`.

```elixir

```

Use [Stream.unfold/2](https://hexdocs.pm/elixir/Stream.html#unfold/2) and [Enum.take/2](https://hexdocs.pm/elixir/Enum.html#take/2) to generate a list of integers from `1` to `10` divided by `2`.

```elixir

```

## Stream.chunk_every/2

Use [Stream.chunk_every/2](https://hexdocs.pm/elixir/Stream.html#chunk_every/2) with [Enum.to_list/1](https://hexdocs.pm/elixir/Enum.html#to_list/1) to chunk `[1, 1, 2, 2, 3, 3]` into `[[1, 1], [2, 2], [3, 3]]`

```elixir

```

Use [Stream.chunk_every/2](https://hexdocs.pm/elixir/Stream.html#chunk_every/2) to chunk `[1, 1, 1, 2, 2, 2]` into `[[1, 1, 1], [2, 2, 2]]`

```elixir

```

Use [Stream.chunk_every/2](https://hexdocs.pm/elixir/Stream.html#chunk_every/2) to chunk `[1, 2, 2, 1, 4, 4]` into pairs, then use [Stream.map/2](https://hexdocs.pm/elixir/Stream.html#map/2) to sum the pairs together to make `[3, 3, 8]`.

```elixir

```

## Commit Your Progress

DockYard Academy now recommends you use the latest [Release](https://github.com/DockYard-Academy/curriculum/releases) rather than forking or cloning our repository.

Run `git status` to ensure there are no undesirable changes.
Then run the following in your command line from the `curriculum` folder to commit your progress.

```
$ git add .
$ git commit -m "finish Stream Drills exercise"
$ git push
```

We're proud to offer our open-source curriculum free of charge for anyone to learn from at their own pace.

We also offer a paid course where you can learn from an instructor alongside a cohort of your peers.
We will accept applications for the June-August 2023 cohort soon.

## Navigation

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">Home</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=Stream Drills">Report An Issue</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../reading/file.livemd">File</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../exercises/file_drills.livemd">File Drills</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>
