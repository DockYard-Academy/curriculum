# Group Project: Presentation

```elixir
Mix.install([
  {:jason, "~> 1.4"},
  {:kino, "~> 0.8.0", override: true},
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Group Project Review

Look back to the requirements for the [Blog](group_project_blog.livemd) project and ensure all of your features match the stated requirements. Speak with your instructor if you would like clarity on anything.

## Group Project: Polish

Take this time to polish your project. Add styles, ensure the navigation is smooth, do whatever you need to do to make sure your project is at it's best before presentation. You may also consider expanding features, refactoring existing code, or adding tests.

This project will likely be an important part of your portfolio, so make sure it's the best it can be with the time you have left.

## Group Project: Fork

When you are completely finished with the project, each student should fork their group project from the project leader so they have their own version they manage.

Students should update the `README` of their fork to better reflect their role in the project.

## Group Project: Presentation

Groups will present their projects to the rest of the class. In your presentation include the following:

* An overview of the project and how it works
* Highlight one aspect of the code that was particularly challenging or engaging. Show code examples.
* Features that you would be interested in expanding upon or any bugs/issues you would like to solve if you had the time.

The presentation will be done informally to mimic how you would present a feature internally on a development team. After each presentation (time permitting) students will engage in group discussion to learn from eachother's experiences.

## Commit Your Progress

Run the following in your command line from the curriculum folder to track and save your progress in a Git commit.
Ensure that you do not already have undesired or unrelated changes by running `git status` or by checking the source control tab in Visual Studio Code.

```
$ git checkout -b blog-posts-exercise
$ git add .
$ git commit -m "finish blog posts exercise"
$ git push origin blog-posts-exercise
```

Create a pull request from your `blog-posts-exercise` branch to your `solutions` branch.
Please do not create a pull request to the DockYard Academy repository as this will spam our PR tracker.

**DockYard Academy Students Only:**

Notify your instructor by including `@BrooklinJazz` in your PR description to get feedback.
You (or your instructor) may merge your PR into your solutions branch after review.

If you are interested in joining the next academy cohort, [sign up here](https://academy.dockyard.com/) to receive more news when it is available.

## Up Next

| Previous                                             | Next                                   |
| ---------------------------------------------------- | -------------------------------------: |
| [Project Deployment](../exercises/deployment.livemd) | [LiveView](../reading/liveview.livemd) |
