# Games: Supervised Score Tracker

```elixir
Mix.install([
  {:jason, "~> 1.4"},
  {:kino, "~> 0.9", override: true},
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">Home</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=Games: Supervised Score Tracker">Report An Issue</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../exercises/supervised_stack.livemd">Supervised Stack</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../reading/task.livemd">Task</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>

## Games: Supervised Score Tracker

You're going to setup your [Games](../exercises/games.livemd) project as a supervised mix project.

Then, create a `Games.ScoreTracker` [GenServer](https://hexdocs.pm/elixir/GenServer.html) which will track a player score as they play different games.

Decide on point rewards for winning a game such as:

* **guessing game**: 5 points
* **rock paper scissors**: 10 points
* **wordle**: 25 points

Increase the `ScoreTracker`'s score whenever a user wins the game.

<!-- livebook:{"break_markdown":true} -->

### Requirements

* The initial score tracker state should be `0`.
* Handle an asynchronous `{:add_points, points}` message to increment the score state.
* Handle a synchronous `:get_score` message to retrieve the current score.
* `Games.ScoreTracker` should be started as a named process by the supervisor.
* Create the `start_link/1`, `add_points/1`, and `current_score/1` functions as documented below.
* Write a full suite of tests including at least the following cases:
  * `"current_score/1 retrieves the current score"`
  * `"add_points/1 adds points to the score"`

<!-- livebook:{"force_markdown":true} -->

```elixir
# Games.ScoreTracker should be a named process, so we don't need to provide the pid.
{:ok, _pid} = Games.ScoreTracker.start_link()
:ok = Games.ScoreTracker.add_points(10)
:ok = Games.ScoreTracker.add_points(10)
20 = Games.ScoreTracker.current_score()
```

<!-- livebook:{"break_markdown":true} -->

### Score Menu

Create a `"score"` command for the game menu that displays the user's current score. For example:

```
$ ./games
What game would you like to play?
1. Guessing Game
2. Rock Paper Scissors
3. Wordle

enter "stop" to exit
enter "score" to view your current score
score

==================================================
Your score is 0
==================================================

What game would you like to play?
1. Guessing Game
2. Rock Paper Scissors
3. Wordle

enter "stop" to exit
enter "score" to view your current score
```

## Commit Your Progress

DockYard Academy now recommends you use the latest [Release](https://github.com/DockYard-Academy/curriculum/releases) rather than forking or cloning our repository.

Run `git status` to ensure there are no undesirable changes.
Then run the following in your command line from the `curriculum` folder to commit your progress.

```
$ git add .
$ git commit -m "finish Games: Supervised Score Tracker exercise"
$ git push
```

We're proud to offer our open-source curriculum free of charge for anyone to learn from at their own pace.

We also offer a paid course where you can learn from an instructor alongside a cohort of your peers.
We will accept applications for the June-August 2023 cohort soon.

## Navigation

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">Home</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=Games: Supervised Score Tracker">Report An Issue</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../exercises/supervised_stack.livemd">Supervised Stack</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../reading/task.livemd">Task</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>
