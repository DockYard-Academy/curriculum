# FizzBuzz

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## FizzBuzz

In the Elixir cell below create a Module `FizzBuzz` with a function `run/1` which takes in a **range**.

Enumerate through the integers and return a new list where

* integers divisible by `3` are replaced with `fizz`
* integers divisible by `5` are replaced with `buzz`
* integers divisible by `3` and `5` are replaced with `fizzbuzz`
* integers not matching the above stay the same.

For example,

<!-- livebook:{"force_markdown":true} -->

```elixir
FizzBuzz.run(1..15)
[1, 2, "fizz", 4, "buzz", "fizz", 7, 8, "fizz", "buzz", 11, "fizz", 13, 14, "fizzbuzz"]
```

<details style="background-color: lightgreen; padding: 1rem; margin: 1rem 0;">
  <summary>Example Solution</summary>

  ```elixir
  defmodule FizzBuzz do
    def run(range) do
      Enum.map(range, fn int ->
        cond do
          rem(int, 3) == 0 and rem(int, 5) == 0 -> "fizzbuzz"
          rem(int, 3) == 0 -> "fizz"
          rem(int, 5) == 0 -> "buzz"
          true -> int
        end
      end)
    end
  end

  FizzBuzz.run(1..100)
  ```
</details>

Enter your solution below.

<!-- livebook:{"attrs":{"source":"YouTube.new(\"https://www.youtube.com/watch?v=QPZ0pIK_wsc&ab_channel=TomScott\")","title":"FizzBuzz"},"kind":"Elixir.HiddenCell","livebook_object":"smart_cell"} -->

```elixir
YouTube.new("https://www.youtube.com/watch?v=QPZ0pIK_wsc&ab_channel=TomScott")
```

```elixir
defmodule FizzBuzz do
  @doc """
  FizzBuzz.

  ## Examples

    iex> FizzBuzz.run(1..15)
    [1, 2, "fizz", 4, "buzz", "fizz", 7, 8, "fizz", "buzz", 11, "fizz", 13, 14, "fizzbuzz"]

    iex> FizzBuzz.run(10..15)
    ["buzz", 11, "fizz", 13, 14, "fizzbuzz"]
  """
  def run(range) do
  end
end
```

## Commit Your Progress

Run the following in your command line from the curriculum folder to track and save your progress in a Git commit.
Ensure that you do not already have undesired or unrelated changes by running `git status` or by checking the source control tab in Visual Studio Code.

```
$ git checkout main
$ git checkout -b exercise-fizzbuzz
$ git add .
$ git commit -m "finish fizzbuzz exercise"
$ git push origin exercise-fizzbuzz
```

**DockYard Academy Students Only:**

Create a pull request to your forked `main` branch and notify your teacher by including `@BrooklinJazz` in your PR description to get feedback.

If you are interested in joining the next academy cohort, [sign up here](https://academy.dockyard.com/) to receive more news when it is available.

## Up Next

| Previous                       | Next                                                         |
| ------------------------------ | -----------------------------------------------------------: |
| [Enum](../reading/enum.livemd) | [Named Number Lists](../exercises/named_number_lists.livemd) |
