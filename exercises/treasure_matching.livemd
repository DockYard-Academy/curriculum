# Treasure Matching

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Treasure Matching

In this exercise, you're going to use **pattern matching** to extract the `"jewel"`
string from the data provided and bind it to a `jewel` variable. The first exercise is complete for example.

```elixir
[_, _, _, jewel] = [1, 2, 3, "jewel"]
jewel
```

Use pattern matching to bind a `jewel` variable to the `"jewel"` string.

```elixir
[1, 2, 3, "jewel"]
```

```elixir
%{key1: "value", key2: "jewel"}
```

```elixir
%{1 => "jewel"}
```

```elixir
%{%{key: [1, 2, 3, 4, 5, {}]} => "jewel"}
```

```elixir
%{north: %{south: %{west: %{east: "jewel"}}}}
```

```elixir
[2, "jewel"]
```

```elixir
["jewel", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
```

```elixir
[1, "jewel", 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
```

```elixir
[1, 2, "jewel", 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
```

```elixir
[[], [1, [2, "jewel"]]]
```

```elixir
"here is the jewel"
```

```elixir
{"jewel"}
```

```elixir
{"jewel", 1}
```

```elixir
{1, 2, "jewel"}
```

```elixir
["jewel"] ++ Enum.to_list(1..100)
```

```elixir
[key: "jewel"]
```

```elixir
[south: "jewel", east: {1, 2}]
```

```elixir
Enum.map(1..4, fn each -> (each == 2 && "jewel") || each end)
```

```elixir
Enum.map(1..4, &((&1 > 3 && "jewel") || &1))
```

## Commit Your Progress

Run the following in your command line from the curriculum folder to track and save your progress in a Git commit.
Ensure that you do not already have undesired or unrelated changes by running `git status` or by checking the source control tab in Visual Studio Code.

```
$ git checkout main
$ git checkout -b exercise-treasure_matching
$ git add .
$ git commit -m "finish treasure matching exercise"
$ git push origin exercise-treasure_matching
```

**DockYard Academy Students Only:**

Create a pull request to your forked `main` branch and notify your teacher by including `@BrooklinJazz` in your PR description to get feedback.

If you are interested in joining the next academy cohort, [sign up here](https://academy.dockyard.com/) to receive more news when it is available.

## Up Next

| Previous                                                                 | Next                                                             |
| ------------------------------------------------------------------------ | ---------------------------------------------------------------: |
| [Advanced Pattern Matching](../reading/advanced_pattern_matching.livemd) | [RPS Pattern Matching](../exercises/rps_pattern_matching.livemd) |
