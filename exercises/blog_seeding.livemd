# Blog: Seeding

```elixir
Mix.install([
  {:jason, "~> 1.4"},
  {:kino, "~> 0.8.0", override: true},
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/curriculum/issues/new)

## Blog: Seeding

You're going to create a seed file for your existing [Blog](./group_project_blog.livemd) project. This seed file will make it easier to manually test your blog application.

<!-- livebook:{"break_markdown":true} -->

### Blog: Seeding

Use the `priv/repo/seeds.exs` file to seed your database with:

1. A blog post without any comments.
2. A blog post with an associated comment.

Once complete, use your seed file to seed the database.

```
$ mix ecto.reset
```

Then display comments on your `Post` show page.

<!-- livebook:{"break_markdown":true} -->

### Bonus: Faker

Add [Faker](https://hexdocs.pm/faker/readme.html) as a dependency in your project.

Then use Faker to create a post with a large amount of text and a comment with a large amount of text.

<!-- livebook:{"break_markdown":true} -->

### Bonus: Create 100 Posts

Create a new seed file that will generate 100 posts.

<!-- livebook:{"break_markdown":true} -->

### Bonus: Create A Post With 100 Comments

Create a new seed file that will generate a post with 100 comments.

## Mark As Completed

<!-- livebook:{"attrs":{"source":"file_name = Path.basename(Regex.replace(~r/#.+/, __ENV__.file, \"\"), \".livemd\")\n\nsave_name =\n  case Path.basename(__DIR__) do\n    \"reading\" -> \"blog_seeding_reading\"\n    \"exercises\" -> \"blog_seeding_exercise\"\n  end\n\nprogress_path = __DIR__ <> \"/../progress.json\"\nexisting_progress = File.read!(progress_path) |> Jason.decode!()\n\ndefault = Map.get(existing_progress, save_name, false)\n\nform =\n  Kino.Control.form(\n    [\n      completed: input = Kino.Input.checkbox(\"Mark As Completed\", default: default)\n    ],\n    report_changes: true\n  )\n\nTask.async(fn ->\n  for %{data: %{completed: completed}} <- Kino.Control.stream(form) do\n    File.write!(\n      progress_path,\n      Jason.encode!(Map.put(existing_progress, save_name, completed), pretty: true)\n    )\n  end\nend)\n\nform","title":"Track Your Progress"},"chunks":null,"kind":"Elixir.HiddenCell","livebook_object":"smart_cell"} -->

```elixir
file_name = Path.basename(Regex.replace(~r/#.+/, __ENV__.file, ""), ".livemd")

save_name =
  case Path.basename(__DIR__) do
    "reading" -> "blog_seeding_reading"
    "exercises" -> "blog_seeding_exercise"
  end

progress_path = __DIR__ <> "/../progress.json"
existing_progress = File.read!(progress_path) |> Jason.decode!()

default = Map.get(existing_progress, save_name, false)

form =
  Kino.Control.form(
    [
      completed: input = Kino.Input.checkbox("Mark As Completed", default: default)
    ],
    report_changes: true
  )

Task.async(fn ->
  for %{data: %{completed: completed}} <- Kino.Control.stream(form) do
    File.write!(
      progress_path,
      Jason.encode!(Map.put(existing_progress, save_name, completed), pretty: true)
    )
  end
end)

form
```

## Commit Your Progress

Run the following in your command line from the curriculum folder to track and save your progress in a Git commit.
Ensure that you do not already have undesired or unrelated changes by running `git status` or by checking the source control tab in Visual Studio Code.

```
$ git checkout -b blog-seeding-exercise
$ git add .
$ git commit -m "finish blog seeding exercise"
$ git push origin blog-seeding-exercise
```

Create a pull request from your `blog-seeding-exercise` branch to your `solutions` branch.
Please do not create a pull request to the DockYard Academy repository as this will spam our PR tracker.

**DockYard Academy Students Only:**

Notify your instructor by including `@BrooklinJazz` in your PR description to get feedback.
You (or your instructor) may merge your PR into your solutions branch after review.

If you are interested in joining the next academy cohort, [sign up here](https://academy.dockyard.com/) to receive more news when it is available.

## Up Next

| Previous                                                     | Next                                                             |
| ------------------------------------------------------------ | ---------------------------------------------------------------: |
| [BookSearch: Seeding](../reading/book_search_seeding.livemd) | [BookSearch: Book Form](../reading/book_search_book_form.livemd) |
