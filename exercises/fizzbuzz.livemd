# FizzBuzz

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"},
  {:tested_cell, github: "brooklinjazz/tested_cell"},
  {:utils, path: "#{__DIR__}/../utils"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## FizzBuzz

In the Elixir cell below create a Module `FizzBuzz` with a function `run/1` which takes in a **range**.

Enumerate through the integers and return a new list where

* integers divisible by `3` are replaced with `fizz`
* integers divisible by `5` are replaced with `buzz`
* integers divisible by `3` and `5` are replaced with `fizzbuzz`
* integers not matching the above stay the same.

For example,

<!-- livebook:{"force_markdown":true} -->

```elixir
FizzBuzz.run(1..15)
[1, 2, "fizz", 4, "buzz", "fizz", 7, 8, "fizz", "buzz", 11, "fizz", 13, 14, "fizzbuzz"]
```

```elixir
defmodule FizzBuzz do
  @doc """
  FizzBuzz.

  ## Examples

    iex> FizzBuzz.run(1..15)
    [1, 2, "fizz", 4, "buzz", "fizz", 7, 8, "fizz", "buzz", 11, "fizz", 13, 14, "fizzbuzz"]

    iex> FizzBuzz.run(10..15)
    ["buzz", 11, "fizz", 13, 14, "fizzbuzz"]
  """
  def run(range) do
    Enum.map(1..15, fn int ->
      case {rem(int, 3), rem(int, 5)} do
        {0, 0} -> "fizzbuzz"
        {0, _} -> "fizz"
        {_, 0} -> "buzz"
        _ -> int
      end
    end)
  end
end

FizzBuzz.run(1..15)
```

## Commit Your Progress

Run the following in your command line from the project folder to track and save your progress in a Git commit.

```
$ git add .
$ git commit -m "finish fizzbuzz exercise"
```

## Up Next

| Previous                                           | Next                                           |
| -------------------------------------------------- | ---------------------------------------------: |
| [Comprehensions](../reading/comprehensions.livemd) | [Voter Count](../exercises/voter_count.livemd) |
