# Journal

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Create A New Mix Project

Create a new project in the `projects` folder called `journal` using the command line.

```
mix new journal --sup
```

<!-- livebook:{"break_markdown":true} -->

Configure your mix project with Ecto by following the [Ecto Getting Started](https://hexdocs.pm/ecto/getting-started.html) guide.

## Journal

Now that we have a mix project with Ecto, you will create a journal application.

You will be able to create many different journals. Each journal will have many entries.

```mermaid
classDiagram
class Journal {
  title: :string
  description: :text
  entries: [Entry]
}

class Entry {
  title: :string
  content: :text
  journal: Journal
}
```

## WIP

## Commit Your Progress

Run the following in your command line from the curriculum folder to track and save your progress in a Git commit.
Ensure that you do not already have undesired or unrelated changes by running `git status` or by checking the source control tab in Visual Studio Code.

```
$ git checkout main
$ git checkout -b exercise-journal
$ git add .
$ git commit -m "finish journal exercise"
$ git push origin exercise-journal
```

**DockYard Academy Students Only:**

Create a pull request to your forked `main` branch and notify your teacher by including `@BrooklinJazz` in your PR description to get feedback.

If you are interested in joining the next academy cohort, [sign up here](https://academy.dockyard.com/) to receive more news when it is available.
