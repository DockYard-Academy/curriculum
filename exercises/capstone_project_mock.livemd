# Capstone: Mock

```elixir
Mix.install([
  {:kino, github: "livebook-dev/kino", override: true},
  {:kino_lab, "~> 0.1.0-dev", github: "jonatanklosko/kino_lab"},
  {:vega_lite, "~> 0.1.4"},
  {:kino_vega_lite, "~> 0.1.1"},
  {:benchee, "~> 0.1"},
  {:ecto, "~> 3.7"},
  {:math, "~> 0.7.0"},
  {:faker, "~> 0.17.0"},
  {:utils, path: "#{__DIR__}/../utils"},
  {:tested_cell, git: "https://github.com/BrooklinJazz/tested_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new)

## Capstone Project

The Capstone Project is an opportunity to demonstrate everything you have learned so far in DockYard Academy, and solidify your skills. It will also be an excellent project you can use on your resume.

In this exercise, plan the features for your Capstone Project. Assuming your project includes visual features, create a mock of your application with [Figma](https://www.figma.com/) or your preferred design software.

Ideally, your capstone project should:

* Demonstrate your skills and knowledge.
* Help you learn and be fun to build.

Consider the following advice as you plan your project.

* Define a minimal set of MVP features you can accomplish before demo day, then bonus features if you have time or that you can work on after this course.
* 

Some possible issues to avoid are:

* Feature Bloat: having too many features so you can't get the project done in time.

* Includes a personal touch to show off your personality, values, or interests.

* Has a minimal MVP set of features you can accomplish, with possible bonus features if you have time.

* Can be ready in time for demo day.

Consider the following advice as you plan

It's important to start planning you Capstone project

## Commit Your Progress

Run the following in your command line from the project folder to track and save your progress in a Git commit.

```
$ git add .
$ git commit -m "finish capstone project mock exercise"
```
