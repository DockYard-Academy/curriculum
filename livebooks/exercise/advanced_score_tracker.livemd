# Advanced Score Tracker

```elixir
Mix.install([
  {:jason, "~> 1.4"},
  {:kino, "~> 0.9", override: true},
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">Home</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=Advanced Score Tracker">Report An Issue</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../exercises/inventory_management.livemd">ETS Inventory Management</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../reading/metaprogramming.livemd">Metaprogramming</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>

## Mastery

Mastery assignments are bonus projects designed to incorporate curriculum concepts at an advanced level. You have complete freedom with how you complete mastery assignments, and may change requirements as you see fit. Each mastery assignment serves as an independent project you may choose to include on your portfolio of projects.

## Advanced Score Tracker

Create a new supervised mix project `AdvancedScoreTracker`.

```
$ mix new advanced_score_tracker --sup
```

The `AdvancedScoreTracker` will use an [Agent](https://hexdocs.pm/elixir/Agent.html) to create a general purpose score tracker that tracks player score history across multiple different games. The `AdvancedScoreTracker` [Agent](https://hexdocs.pm/elixir/Agent.html) should start as part of the application's supervision tree.

<details style="background-color: burlywood; padding: 1rem; margin: 1rem 0;">
<summary>Hint</summary>

Consider how you want to store your state, and how to update it.
For example, you might consider a map.

```elixir
state = %{
  player1: %{
    ping_pong: [0, 20]
  },
  player2: %{
    ping_pong: [0, 20]
    rock_paper_scissors: [3, 2]
  }
}
```

</details>

<!-- livebook:{"break_markdown":true} -->

### Test Cases

Create a full suite of test cases for all of the features described below.

<!-- livebook:{"break_markdown":true} -->

### Score

The `AdvancedScoreTracker` should be able to add a certain number of points given a player name and a game name. A game should start with `0` points by default.

<!-- livebook:{"force_markdown":true} -->

```elixir
AdvancedScoreTracker.add(:player1, :ping_pong, 10)
AdvancedScoreTracker.add(:player1, :ping_pong, 10)
```

It should also be able to retrieve the total number of points for the current game when provided the name of the game and the player.

<!-- livebook:{"force_markdown":true} -->

```elixir
20 = AdvancedScoreTracker.get(:player1, :ping_pong)
```

<!-- livebook:{"break_markdown":true} -->

### New Game

When a game is finished, `AdvancedScoreTracker` should be able to start a new point total with a default score of `0`.
The previous game total should be saved, see the **History** section below.

<!-- livebook:{"force_markdown":true} -->

```elixir
AdvancedScoreTracker.new(:player1, :ping_pong)
0 = AdvancedScoreTracker.get(:player1, :ping_pong)
```

<!-- livebook:{"break_markdown":true} -->

### History

Retrieve a history of scores for a player and a game as a list of point totals.
The most recent game should be at the start of the list.

Each value should be the total number of points accumulated before calling `AdvancedScoreTracker.new/2` to start a new game.

<!-- livebook:{"force_markdown":true} -->

```elixir
[0, 20] = AdvancedScoreTracker.history(:player1, :ping_pong)
```

<!-- livebook:{"break_markdown":true} -->

### High Score

Find a player's highest score from their history.

<!-- livebook:{"force_markdown":true} -->

```elixir
20 = AdvancedScoreTracker.high_score(:player1, :ping_pong)
```

Find the highest score out of all players for a game.

<!-- livebook:{"force_markdown":true} -->

```elixir
20 = AdvancedScoreTracker.high_score(:ping_pong)
```

<!-- livebook:{"break_markdown":true} -->

### Create A GitHub Repository

Connect your `AdvancedScoreTracker` project to a GitHub repository and create a README to describe the purpose of the project and what you learned building it.

## Commit Your Progress

DockYard Academy now recommends you use the latest [Release](https://github.com/DockYard-Academy/curriculum/releases) rather than forking or cloning our repository.

Run `git status` to ensure there are no undesirable changes.
Then run the following in your command line from the `curriculum` folder to commit your progress.

```
$ git add .
$ git commit -m "finish Advanced Score Tracker exercise"
$ git push
```

We're proud to offer our open-source curriculum free of charge for anyone to learn from at their own pace.

We also offer a paid course where you can learn from an instructor alongside a cohort of your peers.
We will accept applications for the June-August 2023 cohort soon.

## Navigation

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">Home</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=Advanced Score Tracker">Report An Issue</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../exercises/inventory_management.livemd">ETS Inventory Management</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../reading/metaprogramming.livemd">Metaprogramming</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>
