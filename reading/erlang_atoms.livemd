# Erlang Atoms

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Setup

Ensure you type the `ea` keyboard shortcut to evaluate all Elixir cells before starting. Alternatively, you can evaluate the Elixir cells as you read.

### Erlang

Atoms in Elixir are also used to provide access to Erlang tools.
If you're not already familiar, Erlang is the low level language that Elixir is built on.
It contains a collection of useful tools

For example, there is the `:math` module, which has math related functionality.

Here's how you can get pi from the :math module.

```elixir
:math.pi()
```

You will learn more about how to use Erlang through atoms in future lessons. It's enough for
now to be aware that Erlang tools can be accessed through certain atoms.

### Your Turn

In the Elixir cell below, create an atom of your favorite element. Mine is `:hydrogen`
because it likes to get along with everyone.

You can find the full list of elements [here](https://ptable.com/?lang=en#Properties).

```elixir

```

## Commit Your Progress

Run the following in your command line from the curriculum folder to track and save your progress in a Git commit.
Ensure that you do not already have undesired or unrelated changes by running `git status` or by checking the source control tab in Visual Studio Code.

```
$ git checkout main
$ git checkout -b exercise-erlang_atoms
$ git add .
$ git commit -m "finish erlang atoms section"
$ git push origin exercise-erlang_atoms
```

**DockYard Academy Students Only:**

Create a pull request to your forked `main` branch and notify your teacher by including `@BrooklinJazz` in your PR description to get feedback.

If you are interested in joining the next academy cohort, [sign up here](https://academy.dockyard.com/) to receive more news when it is available.
