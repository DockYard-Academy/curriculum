# Inventory Management

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Inventory Management

We're going to build an in-memory inventory management application. We need to be able to
start a process and return it's PID.

<!-- livebook:{"force_markdown":true} -->

```elixir
pid = Warehouse.start()
```

We should be able to store an item with a quantity in our warehouse. If we
store the same item in should increase the quantity.

<!-- livebook:{"force_markdown":true} -->

```elixir
Warehouse.store(pid, :apples, 5)
Warehouse.store(pid, :apples, 10)
```

We should be able to retrieve the current quantity of an item in our warehouse.

<!-- livebook:{"force_markdown":true} -->

```elixir
15 = Warehouse.quantity(pid, :apples)
```

You are free to solve the problem how you see fit. However, you might consider using a [GenServer](https://hexdocs.pm/elixir/GenServer.html), [Agent](https://hexdocs.pm/elixir/Agent.html), or `:ets` table.

Enter your solution in the Elixir cell below.

```elixir
defmodule Warehouse do
  def start do
  end

  def store(pid, item, quantity) do
  end

  def quantity(pid, item) do
  end
end
```

## Commit Your Progress

Run the following in your command line from the curriculum folder to track and save your progress in a Git commit.
Ensure that you do not already have undesired or unrelated changes by running `git status` or by checking the source control tab in Visual Studio Code.

```
$ git checkout main
$ git checkout -b exercise-inventory_management
$ git add .
$ git commit -m "finish inventory management exercise"
$ git push origin exercise-inventory_management
```

**DockYard Academy Students Only:**

Create a pull request to your forked `main` branch and notify your teacher by including `@BrooklinJazz` in your PR description to get feedback.

If you are interested in joining the next academy cohort, [sign up here](https://academy.dockyard.com/) to receive more news when it is available.

## Up Next

| Previous                                                 | Next                                           |
| -------------------------------------------------------- | ---------------------------------------------: |
| [Caching Agent ETS](../reading/caching_agent_ets.livemd) | [Smart Cache](../exercises/smart_cache.livemd) |
