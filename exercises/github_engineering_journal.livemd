# Github Engineering Journal

```elixir
Mix.install([
  {:kino, github: "livebook-dev/kino", override: true},
  {:kino_lab, "~> 0.1.0-dev", github: "jonatanklosko/kino_lab"},
  {:vega_lite, "~> 0.1.4"},
  {:kino_vega_lite, "~> 0.1.1"},
  {:benchee, "~> 0.1"},
  {:ecto, "~> 3.7"},
  {:math, "~> 0.7.0"},
  {:faker, "~> 0.17.0"},
  {:utils, path: "#{__DIR__}/../utils"},
  {:tested_cell, git: "https://github.com/BrooklinJazz/tested_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Engineering Journal

It's genuinely a great habit to keep an engineering journal.
You can use your engineering journal to track how you solve problems and what your work on.
It's also excellent practice with Git, GitHub, and markdown.

You may use any method (such as GitHub Desktop, or the command line) to accomplish the following.

In this exercise

* create a local git project called `engineering_journal`.
* create your first journal entry as a `.md` file. Name the file after a topic, or todays date. i.e. `2022-03-28.md`.
* stage and commit the journal entry.
* create a remote repository for `engineering_journal`.
* push your changes to the remote repository.

Once finished, we highly recommend you use this as an engineering journal to track things you learn about Elixir.

You may also be interested in the [Foam](https://foambubble.github.io/foam/) project for Visual Studio Code. Foam provides
to use links and other useful features for your journal.
