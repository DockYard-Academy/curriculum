# Anagram Solver

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Anagram Solver

Two words that contain all the same letters are anagrams.
For example **bored** and **robed** are anagrams.

You are going to create an `AnagramSolver` with a `solve/1` function that accepts a word and
returns every possible permutation of the anagram. Each permutation does not need to be a real word.

For example,

<!-- livebook:{"force_markdown":true} -->

```elixir
AnagramSolver.solve("cat")
[
  "cat",
  "cta",
  "act",
  "atc",
  "tac",
  "tca"
]
```

You can expect that the number of answers for a word of given length `n` will be `n!`.
So a word with 3 letters has 6 solutions, a word with 4 letters has 24 answers, a word with
5 letters has 120 answers.

Enter your solution in the Elixir cell below,

```elixir
defmodule AnagramSolver do
  def solve(word) do
  end
end
```

## Commit Your Progress

Run the following in your command line from the curriculum folder to track and save your progress in a Git commit.
Ensure that you do not already have undesired or unrelated changes by running `git status` or by checking the source control tab in Visual Studio Code.

```
$ git checkout main
$ git checkout -b exercise-anagram_solver
$ git add .
$ git commit -m "finish anagram solver exercise"
$ git push origin exercise-anagram_solver
```

**DockYard Academy Students Only:**

Create a pull request to your forked `main` branch and notify your teacher by including `@BrooklinJazz` in your PR description to get feedback.

If you are interested in joining the next academy cohort, [sign up here](https://academy.dockyard.com/) to receive more news when it is available.
