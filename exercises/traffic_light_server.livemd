# Traffic Light Server

```elixir
Mix.install([
  {:kino, github: "livebook-dev/kino", override: true},
  {:kino_lab, "~> 0.1.0-dev", github: "jonatanklosko/kino_lab"},
  {:vega_lite, "~> 0.1.4"},
  {:kino_vega_lite, "~> 0.1.1"},
  {:benchee, "~> 0.1"},
  {:ecto, "~> 3.7"},
  {:math, "~> 0.7.0"},
  {:faker, "~> 0.17.0"},
  {:utils, path: "#{__DIR__}/../utils"},
  {:tested_cell, git: "https://github.com/BrooklinJazz/tested_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Traffic Light Server

Create a `TrafficLightServer` which stores the state of the traffic light `:red`, `:green`, or `:yellow`.

The `TrafficLightServer` should be able to transition from one color to another. It should start as `:green`.

<!-- livebook:{"force_markdown":true} -->

```elixir
{:ok, pid} = TrafficLightServer.start()

:green = TrafficLightServer.light(pid)

TrafficLightServer.transition(pid)
:yellow = TrafficLightServer.light(pid)

TrafficLightServer.transition(pid)
:red = TrafficLightServer.light(pid)

TrafficLightServer.transition(pid)
:green = TrafficLightServer.light(pid)
```

Enter your answer in the Elixir cell below.

```elixir
defmodule TrafficLightServer do

end
```

## TrafficGrid

Create a `TrafficGrid` which should manage 5 `TrafficLightServer`.

<!-- livebook:{"force_markdown":true} -->

```elixir
{:ok, pid} = Grid

TrafficGrid.lights(pid)
[:green, :green, :green, :green, :green]
```

Every second, the grid should automatically transition one light in order.

<!-- livebook:{"force_markdown":true} -->

```elixir
{:ok, pid} = Grid

TrafficGrid.lights(pid)
[:green, :green, :green, :green, :green]

# This may need to sleep for 1001 milliseconds.
Process.sleep(1000)
[:yellow, :green, :green, :green, :green]

Process.sleep(1000)
[:yellow, :yellow, :green, :green, :green]

Process.sleep(1000)
[:yellow, :yellow, :yellow, :green, :green]

Process.sleep(1000)
[:yellow, :yellow, :yellow, :yellow, :green]

Process.sleep(1000)
[:yellow, :yellow, :yellow, :yellow, :yellow]

Process.sleep(1000)
[:red, :yellow, :yellow, :yellow, :yellow]
# And so on...
```

Enter your answer in the Elixir cell below.
```elixir

```

## Commit Your Progress

Run the following in your command line from the project folder to track and save your progress in a Git commit.

```
$ git add .
$ git commit -m "finish traffic light server exercise"
```
