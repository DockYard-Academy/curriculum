# Comparison Operators

```elixir
Mix.install([
  {:jason, "~> 1.4"},
  {:kino, "~> 0.9", override: true},
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">Home</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=Comparison Operators">Report An Issue</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../reading/booleans.livemd">Booleans</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../reading/match_operator.livemd">Match Operator</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>

## Review Questions

Upon completing this lesson, a student should be able to answer the following questions.

* What are comparison operators, and what do they commonly compare?
* How might we use comparison operators in our programs?

## Comparison Operators

Comparison operators allow us to compare values.

Using comparison operators, we can check if values are equal <span style="background-color: rgb(225 232 240); padding: 0.1rem 0.5rem; border-radius: 0.5rem;">==</span>, greater than `>`, less than `<`,
greater than or equal <span style="background-color: rgb(225 232 240); padding: 0.1rem 0.5rem; border-radius: 0.5rem;">>=</span>, and less than or equal <span style="background-color: rgb(225 232 240); padding: 0.1rem 0.5rem; border-radius: 0.5rem;"><=</span>.

Comparison operators can be used on any value but are most commonly used to compare
integers and floats.

The result of a comparison is a boolean, either `true` or `false`.

For example, if we check that `5` equals `5`, we return `true`.

```elixir
5 == 5
```

### Remembering Greater Than And Less Than

`>` greater than

`<` less than

To help remember which symbol `<` or `>` means greater than or less than, you might find it helpful
to remember that the statement is `true` if the larger number goes on the larger side.

Some people find it helpful to visualize the statement as an alligator eating. And the alligator always wants
the biggest meal.

```elixir
# Aligator Wants Biggest Meal. The Biggest Number Is `10` So Return True.
10 > 2
```

```elixir
# Aligator Wants Biggest Meal. The Biggest Number Is `10`, But It Eats `2` So Return False.
10 < 2
```

### Strictly Equals

<!-- livebook:{"break_markdown":true} -->

There are two operators for checking equality in Elixir. `===` will check if two values
are strictly equal in both value and type. So despite having  the same numerical value,
`1` does not equal `1.0` because integers and floats are not the same types.

```elixir
1 === 1.0
```

However, if you only care about the numerical value and not the data type, you can use only
two equals signs instead of three `==`

```elixir
1.0 == 1
```

### Your Turn

Using comparison operators, determine if `10 + 10 * 15` is greater than `(10 + 10) * 15`.

<details style="background-color: lightgreen; padding: 1rem; margin: 1rem 0;">
<summary>Example solution</summary>

```elixir
10 + 10 * 15 > (10 + 10) * 15
```

</details>

```elixir

```

Using comparisons operators, determine if `4 ** 6` is equal to `4 * 4 * 4 * 4 * 4 * 4`.

<details style="background-color: lightgreen; padding: 1rem; margin: 1rem 0;">
<summary>Example solution</summary>

```elixir
4 ** 6 == 4 * 4 * 4 * 4 * 4 * 4
```

</details>

```elixir

```

Using comparison operators, determine if `100 / 2` is strictly equal to `50`.

<details style="background-color: lightgreen; padding: 1rem; margin: 1rem 0;">
<summary>Example solution</summary>

```elixir
100 / 2 === 50
```

</details>

```elixir

```

## Comparing Different Data Types

You can compare different data types to each other in the following [Sorting Order](https://hexdocs.pm/elixir/master/operators.html#term-ordering).

<!-- livebook:{"force_markdown":true} -->

```elixir
number < atom < reference < function < port < pid < tuple < map < list < bitstring
```

You'll notice several data types that you may not be familiar with above. Don't worry. There's no need to memorize this sorting order nor know all of these data types.

<!-- livebook:{"break_markdown":true} -->

### Comparisons Strings

When comparing strings, they compare based on alphabetical order. Letters earlier
in the alphabet are evaluated as smaller than letters later in the alphabet.

```elixir
"a" < "z"
```

Capital letters are always less than lowercase letters regardless of alphabetical order.

<!-- livebook:{"force_markdown":true} -->

```elixir
"Z" < "a"
```

<!-- livebook:{"break_markdown":true} -->

### Your Turn

Use comparison operators to determine if `"hello"` is equal to `"hello"`.

<details style="background-color: lightgreen; padding: 1rem; margin: 1rem 0;">
<summary>Example solution</summary>

```elixir
"hello" == "hello"
```

</details>

```elixir

```

## Further Reading

Consider the following resource(s) to deepen your understanding of the topic.

* [HexDocs: Operators](https://hexdocs.pm/elixir/operators.html)

## Commit Your Progress

DockYard Academy now recommends you use the latest [Release](https://github.com/DockYard-Academy/curriculum/releases) rather than forking or cloning our repository.

Run `git status` to ensure there are no undesirable changes.
Then run the following in your command line from the `curriculum` folder to commit your progress.

```
$ git add .
$ git commit -m "finish Comparison Operators reading"
$ git push
```

We're proud to offer our open-source curriculum free of charge for anyone to learn from at their own pace.

We also offer a paid course where you can learn from an instructor alongside a cohort of your peers.
We will accept applications for the June-August 2023 cohort soon.

## Navigation

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">Home</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=Comparison Operators">Report An Issue</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../reading/booleans.livemd">Booleans</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../reading/match_operator.livemd">Match Operator</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>
