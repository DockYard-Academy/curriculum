# MapSet Drills

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## MapSet Drills

Drills help you develop familiarity and muscle memory with syntax through repeated exercises. Unlike usual problems, Drills are not intended to develop problem solving skills, they are purely for developing comfort and speed.

This set of drills is for [MapSets](../reading/maps_mapsets_keyword_lists.livemd) follow the instructions for each drill and complete them as quickly as you can.

## MapSet.new/2

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create a mapset with the integers `1`, `2`, and `3`.

```elixir

```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create an empty mapset.

```elixir

```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create a mapset with the integers `1` to `10`.

```elixir

```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create a mapset with the integers `1` to `1000`.

```elixir

```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create a mapset with the same elements as the list below.

```elixir
list = [%{}, 2, "3"]
```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create a mapset with the elements `%{key: "value"}`, `[one: 1]`, and `{1, 2, 3}`.

```elixir

```

## MapSet.put/2

Use [MapSet.put/2](https://hexdocs.pm/elixir/MapSet.html#put/2) to put the element `"a"` into the existing `mapset`.

```elixir
mapset = MapSet.new(["b", "c"])
```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) and [MapSet.put/2](https://hexdocs.pm/elixir/MapSet.html#put/2) to put `1` into a [MapSet](https://hexdocs.pm/elixir/MapSet.html) containing the elements `2` and `3`.

```elixir

```

Use [MapSet.put/2](https://hexdocs.pm/elixir/MapSet.html#put/2) twice with the element `1` on an empty mapset to demonstrate that the MapSet only contains unique values.

```elixir

```

## MapSet.delete/2

Use [MapSet.delete/2](https://hexdocs.pm/elixir/MapSet.html#delete/2) to delete the `1` element from the following `mapset`.

```elixir
mapset = MapSet.new([1])
```

Use [MapSet.delete/2](https://hexdocs.pm/elixir/MapSet.html#delete/2) and [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create a mapset with elements from `1` to `6` then delete the `6` element.

## MapSet.member?/2

Use [MapSet.member?/2](https://hexdocs.pm/elixir/MapSet.html#member?/2) to check if `1` is in the following `mapset`.

```elixir
mapset = MapSet.new([1, 2, 3])
```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create a mapset with elements from `1` to `10`. Then use [MapSet.member?/2](https://hexdocs.pm/elixir/MapSet.html#member?/2) to check if `11` is in the mapset.

```elixir

```

Use [MapSet.member?/2](https://hexdocs.pm/elixir/MapSet.html#member?/2) to check if `%{key: "value"}` is in the following mapset.

```elixir
mapset = MapSet.new([%{key: "value"}])
```

## MapSet.filter/2

Use [MapSet.filter/2](https://hexdocs.pm/elixir/MapSet.html#filter/2) to filter the following mapset and make a mapset with only integers.

```elixir
mapset = MapSet.new(["a", "b", "c", 1, 2, 3])
```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) and [MapSet.filter/2](https://hexdocs.pm/elixir/MapSet.html#filter/2) to create a mapset with integers from `1` to `10`, then filter it to make a mapset with only even numbers.

```elixir

```

Use [MapSet.filter/2](https://hexdocs.pm/elixir/MapSet.html#filter/2) to filter the following mapset to only include strings containing the letter `"a"`.

```elixir
MapSet.new(["apple", "orange", "pear", "banana", "cherry", "fruit"])
```

## MapSet.equal?/2

Use [MapSet.equal?/2](https://hexdocs.pm/elixir/MapSet.html#equal?/2) to check if the following mapset is equal to `MapSet.new([1])`.

```elixir
mapset = MapSet.new([1])
```

Use [MapSet.equal?/2](https://hexdocs.pm/elixir/MapSet.html#equal?/2) to check if `MapSet.new([1, 2, 3, 4, 5])` is equal to `MapSet.new(1..5)`.

```elixir

```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create an empty mapset, then [MapSet.put/2](https://hexdocs.pm/elixir/MapSet.html#put/2) to add `1` to the mapset.
Then use [MapSet.equal?/2](https://hexdocs.pm/elixir/MapSet.html#equal?/2) to check if the resulting mapset equals `MapSet.new([1])`

```elixir

```

## MapSet.subset?/2

Use [MapSet.subset?/2](https://hexdocs.pm/elixir/MapSet.html#subset?/2) to check if `MapSet.new([2, 3])` is a subset of `MapSet.new([1, 2, 3, 4])`. The result should be `true`.

```elixir

```

Use [MapSet.subset?/2](https://hexdocs.pm/elixir/MapSet.html#subset?/2) to check if `MapSet.new(["a"])` is a subset of `MapSet.new(["a", "b"])`.

```elixir

```

## MapSet.to_list/1

Use [MapSet.to_list/1](https://hexdocs.pm/elixir/MapSet.html#to_list/1) to convert the following `mapset` into a list.

```elixir
mapset = MapSet.new([1, 2, 3])
```

## Commit Your Progress

Run the following in your command line from the curriculum folder to track and save your progress in a Git commit.
Ensure that you do not already have undesired or unrelated changes by running `git status` or by checking the source control tab in Visual Studio Code.

```
$ git checkout main
$ git checkout -b exercise-mapset_drills
$ git add .
$ git commit -m "finish mapset drills exercise"
$ git push origin exercise-mapset_drills
```

**DockYard Academy Students Only:**

Create a pull request to your forked `main` branch and notify your teacher by including `@BrooklinJazz` in your PR description to get feedback.

If you are interested in joining the next academy cohort, [sign up here](https://academy.dockyard.com/) to receive more news when it is available.

## Up Next

| Previous                                                                   | Next                                                                 |
| -------------------------------------------------------------------------- | -------------------------------------------------------------------: |
| [Maps MapSets Keyword Lists](../reading/maps_mapsets_keyword_lists.livemd) | [MapSet Product Filters](../exercises/mapset_product_filters.livemd) |
