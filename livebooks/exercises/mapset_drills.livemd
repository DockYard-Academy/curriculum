# MapSet Drills

```elixir
Mix.install([
  {:jason, "~> 1.4"},
  {:kino, "~> 0.9", override: true},
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">Home</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=MapSet Drills">Report An Issue</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../reading/maps_mapsets_keyword_lists.livemd">Maps, Mapsets, And Keyword Lists</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../exercises/fibonacci_challenge.livemd">Fibonacci Sequence</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>

## MapSet Drills

Drills help you develop familiarity and muscle memory with syntax through repeated exercises. Unlike usual problems, Drills are not intended to develop problem solving skills, they are purely for developing comfort and speed.

This set of drills is for [MapSets](../reading/maps_mapsets_keyword_lists.livemd) follow the instructions for each drill and complete them as quickly as you can.

## MapSet.new/2

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create a mapset with the integers `1`, `2`, and `3`.

```elixir

```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create an empty mapset.

```elixir

```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create a mapset with the integers `1` to `10`.

```elixir

```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create a mapset with the integers `1` to `1000`.

```elixir

```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create a mapset with the same elements as the list below.

```elixir
list = [%{}, 2, "3"]
```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create a mapset with the elements `%{key: "value"}`, `[one: 1]`, and `{1, 2, 3}`.

```elixir

```

## MapSet.put/2

Use [MapSet.put/2](https://hexdocs.pm/elixir/MapSet.html#put/2) to put the element `"a"` into the existing `mapset`.

```elixir
mapset = MapSet.new(["b", "c"])
```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) and [MapSet.put/2](https://hexdocs.pm/elixir/MapSet.html#put/2) to put `1` into a [MapSet](https://hexdocs.pm/elixir/MapSet.html) containing the elements `2` and `3`.

```elixir

```

Use [MapSet.put/2](https://hexdocs.pm/elixir/MapSet.html#put/2) twice with the element `1` on an empty mapset to demonstrate that the MapSet only contains unique values.

```elixir

```

## MapSet.delete/2

Use [MapSet.delete/2](https://hexdocs.pm/elixir/MapSet.html#delete/2) to delete the `1` element from the following `mapset`.

```elixir
mapset = MapSet.new([1])
```

Use [MapSet.delete/2](https://hexdocs.pm/elixir/MapSet.html#delete/2) and [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create a mapset with elements from `1` to `6` then delete the `6` element.

## MapSet.member?/2

Use [MapSet.member?/2](https://hexdocs.pm/elixir/MapSet.html#member?/2) to check if `1` is in the following `mapset`.

```elixir
mapset = MapSet.new([1, 2, 3])
```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create a mapset with elements from `1` to `10`. Then use [MapSet.member?/2](https://hexdocs.pm/elixir/MapSet.html#member?/2) to check if `11` is in the mapset.

```elixir

```

Use [MapSet.member?/2](https://hexdocs.pm/elixir/MapSet.html#member?/2) to check if `%{key: "value"}` is in the following mapset.

```elixir
mapset = MapSet.new([%{key: "value"}])
```

## MapSet.filter/2

Use [MapSet.filter/2](https://hexdocs.pm/elixir/MapSet.html#filter/2) to filter the following mapset and make a mapset with only integers.

```elixir
mapset = MapSet.new(["a", "b", "c", 1, 2, 3])
```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) and [MapSet.filter/2](https://hexdocs.pm/elixir/MapSet.html#filter/2) to create a mapset with integers from `1` to `10`, then filter it to make a mapset with only even numbers.

```elixir

```

Use [MapSet.filter/2](https://hexdocs.pm/elixir/MapSet.html#filter/2) to filter the following mapset to only include strings containing the letter `"a"`.

```elixir
MapSet.new(["apple", "orange", "pear", "banana", "cherry", "fruit"])
```

## MapSet.equal?/2

Use [MapSet.equal?/2](https://hexdocs.pm/elixir/MapSet.html#equal?/2) to check if the following mapset is equal to `MapSet.new([1])`.

```elixir
mapset = MapSet.new([1])
```

Use [MapSet.equal?/2](https://hexdocs.pm/elixir/MapSet.html#equal?/2) to check if `MapSet.new([1, 2, 3, 4, 5])` is equal to `MapSet.new(1..5)`.

```elixir

```

Use [MapSet.new/2](https://hexdocs.pm/elixir/MapSet.html#new/2) to create an empty mapset, then [MapSet.put/2](https://hexdocs.pm/elixir/MapSet.html#put/2) to add `1` to the mapset.
Then use [MapSet.equal?/2](https://hexdocs.pm/elixir/MapSet.html#equal?/2) to check if the resulting mapset equals `MapSet.new([1])`

```elixir

```

## MapSet.subset?/2

Use [MapSet.subset?/2](https://hexdocs.pm/elixir/MapSet.html#subset?/2) to check if `MapSet.new([2, 3])` is a subset of `MapSet.new([1, 2, 3, 4])`. The result should be `true`.

```elixir

```

Use [MapSet.subset?/2](https://hexdocs.pm/elixir/MapSet.html#subset?/2) to check if `MapSet.new(["a"])` is a subset of `MapSet.new(["a", "b"])`.

```elixir

```

## MapSet.to_list/1

Use [MapSet.to_list/1](https://hexdocs.pm/elixir/MapSet.html#to_list/1) to convert the following `mapset` into a list.

```elixir
mapset = MapSet.new([1, 2, 3])
```

## Commit Your Progress

DockYard Academy now recommends you use the latest [Release](https://github.com/DockYard-Academy/curriculum/releases) rather than forking or cloning our repository.

Run `git status` to ensure there are no undesirable changes.
Then run the following in your command line from the `curriculum` folder to commit your progress.

```
$ git add .
$ git commit -m "finish MapSet Drills exercise"
$ git push
```

We're proud to offer our open-source curriculum free of charge for anyone to learn from at their own pace.

We also offer a paid course where you can learn from an instructor alongside a cohort of your peers.
We will accept applications for the June-August 2023 cohort soon.

## Navigation

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">Home</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=MapSet Drills">Report An Issue</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../reading/maps_mapsets_keyword_lists.livemd">Maps, Mapsets, And Keyword Lists</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../exercises/fibonacci_challenge.livemd">Fibonacci Sequence</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>
