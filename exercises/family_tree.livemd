# Family Tree

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Family Tree

Maps allow you to create tree like structures using keys and values. Thus it's possible to make a family tree.
In the Elixir cell below, create a family tree that is a `map`.

<!-- livebook:{"break_markdown":true} -->

```mermaid
flowchart BT
p1g1[Grandparent]
p1g2[Grandparent]
p2g1[Grandparent]
p2g2[Grandparent]
p1[Parent]
p2[Parent]
c1[Child]

c1 --> p1
c1 --> p2
p1 --> p1g1
p1 --> p1g2
p2 --> p2g1
p2 --> p2g2
```

<!-- livebook:{"break_markdown":true} -->

The map will start as a person with
a `:name`, `:age`, `:status`, and `:parents` keys.

* `name` is string.
* `age` is an integer.
* `status` will be an atom of `:child`, `:parent`, or `:grandparent`.
* `parents` should be a list of maps with their own `:name`, `:age`, `:status`, and `:parents` keys.

In the Elixir cell below, create a map that represents the following family tree diagram.

<!-- livebook:{"break_markdown":true} -->

```mermaid
classDiagram
    direction BT
    class Arthur {
        name: "Arthur"
        status: :child
        age: 22
    }
    class Uther {
        name: "Uther"
        status: :parent
        age: 56
    }
    class Ygraine {
        name: "Ygraine"
        status: :parent
        age: 45
    }
    class Han {
        name: "Han"
        status: :grand_parent
        age: 81
    }
    class Leia {
        name: "Leia"
        status: :grand_parent
        age: 82
    }
    class Bob {
        name: "Bob"
        status: :grand_parent
        age: 68
    }
    class Bridget {
        name: "Bridget"
        status: :grand_parent
        age: 70
    }

    Arthur --> Uther
    Arthur --> Ygraine
    Ygraine --> Bob
    Ygraine --> Bridget
    Uther --> Han
    Uther --> Leia
```

<!-- livebook:{"break_markdown":true} -->

<details style="background-color: lightgreen; padding: 1rem; margin: 1rem 0;">
<summary>Example solution</summary>

This is an example of **nested data**.

```elixir
%{
  name: "Arthur",
  status: :child,
  age: 22,
  parents: [
    %{
      name: "Uther",
      status: :parent,
      age: 56,
      parents: [
        %{name: "Han", status: :grand_parent, age: 81},
        %{name: "Leia", status: :grand_parent, age: 82}
      ]
    },
    %{
      name: "Ygraine",
      status: :parent,
      age: 68,
      parents: [
        %{name: "Bob", status: :grand_parent, age: 68},
        %{name: "Bridget", status: :grand_parent, age: 70}
      ]
    }
  ]
}
```

You might also consider extracting each family member as its own variable.

```elixir
han = %{name: "Han", status: :grand_parent, age: 81}
leia = %{name: "Leia", status: :grand_parent, age: 82}
bob = %{name: "Bob", status: :grand_parent, age: 68}
bridget = %{name: "Bridget", status: :grand_parent, age: 70}

uther = %{name: "Uther", status: :parent, age: 56, parents: [han, leia]}
ygraine = %{name: "Ygraine", status: :parent, age: 68, parents: [bob, bridget]}

arthur = %{name: "Arthur", status: :child, age: 22, parents: [uther, ygraine]}

family_tree = arthur
```

</details>

Enter your solution below.

```elixir

```

## Commit Your Progress

Run the following in your command line from the curriculum folder to track and save your progress in a Git commit.
Ensure that you do not already have undesired or unrelated changes by running `git status` or by checking the source control tab in Visual Studio Code.

```
$ git checkout main
$ git checkout -b exercise-family_tree
$ git add .
$ git commit -m "finish family tree exercise"
$ git push origin exercise-family_tree
```

**DockYard Academy Students Only:**

Create a pull request to your forked `main` branch and notify your teacher by including `@BrooklinJazz` in your PR description to get feedback.

If you are interested in joining the next academy cohort, [sign up here](https://academy.dockyard.com/) to receive more news when it is available.

## Up Next

| Previous                                           | Next                               |
| -------------------------------------------------- | ---------------------------------: |
| [Shopping List](../exercises/shopping_list.livemd) | [Mazes](../exercises/mazes.livemd) |
