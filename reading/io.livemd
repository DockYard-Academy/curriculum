# IO

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Setup

Ensure you type the `ea` keyboard shortcut to evaluate all Elixir cells before starting. Alternatively you can evaluate the Elixir cells as you read.

## IO

When building command line applications, we can use the [IO](https://hexdocs.pm/elixir/IO.html) module for retrieving user input and displaying output in the command line.

We've can use [IO.inspect/2](https://hexdocs.pm/elixir/IO.html#inspect/2) and [IO.puts/2](https://hexdocs.pm/elixir/IO.html#puts/2) for displaying information in the command line.

We can also use [IO.gets/2](https://hexdocs.pm/elixir/IO.html#gets/2) to retrieve input from the user.

<!-- livebook:{"force_markdown":true} -->

```elixir
iex> input = IO.gets("Give me some input: ")
Give me some input: sure!
"sure!\n"
iex> input
"sure!\n"
```

Keep in mind, this will work in a [Mix](https://hexdocs.pm/mix/Mix.html) project, or the [IEx](https://hexdocs.pm/iex/IEx.html) shell, but will fail with an `:enotsup` (error not supported) error when we run it from Livebook.

```elixir
IO.gets("I will fail!")
```

That's because there is no command line or other device to retrieve user input from.

<!-- livebook:{"break_markdown":true} -->

### Your Turn

Run [IO.gets/2](https://hexdocs.pm/elixir/IO.html#gets/2) in the command line from the [IEx](https://hexdocs.pm/iex/IEx.html) shell and bind the return value to an `input` variable.

<!-- livebook:{"force_markdown":true} -->

```elixir
iex> input = IO.gets("Give me some input: ")
```

## Commit Your Progress

Run the following in your command line from the curriculum folder to track and save your progress in a Git commit.
Ensure that you do not already have undesired or unrelated changes by running `git status` or by checking the source control tab in Visual Studio Code.

```
$ git checkout main
$ git checkout -b exercise-io
$ git add .
$ git commit -m "finish io section"
$ git push origin exercise-io
```

**DockYard Academy Students Only:**

Create a pull request to your forked `main` branch and notify your teacher by including `@BrooklinJazz` in your PR description to get feedback.

If you are interested in joining the next academy cohort, [sign up here](https://academy.dockyard.com/) to receive more news when it is available.

## Up Next

| Previous                     | Next                                           |
| ---------------------------- | ---------------------------------------------: |
| [Mix](../reading/mix.livemd) | [Games Setup](../exercises/games_setup.livemd) |
